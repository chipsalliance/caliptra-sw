/*++
Licensed under the Apache-2.0 license.
--*/

// generated by src/integration/verilated/generate_rust_bindings.sh

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct caliptra_verilated {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct caliptra_verilated_sig_in {
    pub core_clk: bool,
    pub cptra_pwrgood: bool,
    pub cptra_rst_b: bool,
    pub paddr: u32,
    pub pprot: u8,
    pub psel: bool,
    pub penable: bool,
    pub pwrite: bool,
    pub pwdata: u32,
    pub pauser: u32,
    pub imem_we: bool,
    pub imem_addr: u32,
    pub imem_wdata: u64,
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct caliptra_verilated_sig_out {
    pub ready_for_fuses: bool,
    pub ready_for_fw_push: bool,
    pub pready: bool,
    pub pslverr: bool,
    pub prdata: u32,
    pub generic_load_en: bool,
    pub generic_load_data: u32,
}
extern "C" {
    pub fn caliptra_verilated_new() -> *mut caliptra_verilated;
}
extern "C" {
    pub fn caliptra_verilated_destroy(model: *mut caliptra_verilated);
}
extern "C" {
    pub fn caliptra_verilated_trace(
        model: *mut caliptra_verilated,
        vcd_out_path: *const ::std::os::raw::c_char,
        depth: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn caliptra_verilated_eval(
        model: *mut caliptra_verilated,
        in_: *const caliptra_verilated_sig_in,
        out: *mut caliptra_verilated_sig_out,
    );
}
